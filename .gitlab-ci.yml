variables:
  REMOTE_IMAGE: index.docker.io/fintechstudios/davical
  CI_IMAGE: $CI_REGISTRY_IMAGE/davical
  GIT_DEPTH: 10
  DOCKER_BUILDKIT: 1
  # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#docker-in-docker-with-tls-enabled-in-the-docker-executor
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  DOCKER_TLS_VERIFY: 1
  DOCKER_HOST: tcp://docker:2376
  DOCKER_DRIVER: overlay2

stages:
  - build
  - deploy

.docker-job:
  image: docker:20
  services:
    - docker:20-dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin

.use-build-matrix:
  parallel:
    matrix:
      - PHP_VERSION: ["8.1.13"]
        DISTRO: ["bullseye"]

.build-image:
  stage: build
  extends:
    - .docker-job
    - .use-build-matrix
  variables:
    BUILD_PREFIX: "" #required
    DOCKER_BUILD_FLAGS: ""
  script:
    - |
      docker build \
        --tag built_image \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --build-arg PHP_VERSION \
        --build-arg DISTRO \
        --cache-from $CI_IMAGE:php$PHP_VERSION-$DISTRO \
        --cache-from $CI_IMAGE:php$PHP_VERSION-$DISTRO-$CI_COMMIT_REF_SLUG \
        $DOCKER_BUILD_FLAGS \
        .
    - |
      export IMAGE_TAGS="\
        php$PHP_VERSION-$DISTRO \
        php$PHP_VERSION-$DISTRO-$CI_COMMIT_REF_SLUG \
        $BUILD_PREFIX-php$PHP_VERSION-$DISTRO-$CI_COMMIT_SHA \
      "
    - |
      for TAG in $(echo $IMAGE_TAGS)
      do
        printf "Publishing %s\n" "$CI_IMAGE:$TAG"
        docker tag built_image "$CI_IMAGE:$TAG"
        docker push "$CI_IMAGE:$TAG"
      done

.release-image:
  stage: deploy
  extends:
    - .docker-job
    - .use-build-matrix
  variables:
    BUILD_PREFIX: "" # required
  script:
    - echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    - export RELEASE_TAG="$CI_IMAGE:$BUILD_PREFIX-php$PHP_VERSION-$DISTRO-$CI_COMMIT_SHA"
    - echo "Preparing $RELEASE_TAG"
    - docker pull $RELEASE_TAG
    - export IMAGE_TAGS=$(./helpers/get-image-tags.sh "$RELEASE_TAG" "$PHP_VERSION" "$DISTRO" "$CI_COMMIT_SHA" "$BUILD_PREFIX")
    - |
      for TAG in $(echo $IMAGE_TAGS)
      do
        printf "Publishing %s\n" "$REMOTE_IMAGE:$TAG"
        docker tag $RELEASE_TAG "$REMOTE_IMAGE:$TAG"
        docker push "$REMOTE_IMAGE:$TAG"
      done

##
## Commit pipelines
##

.only-commits:
  rules:
    - if: "$CI_PIPELINE_SOURCE != 'schedule'"
  variables:
    # this string is used in ./helpers/get-image-tags.sh and must be synced if changed
    BUILD_PREFIX: "latest"

build:
  extends:
    - .build-image
    - .only-commits

release:
  extends:
    - .release-image
  rules:
    - if: "$CI_COMMIT_BRANCH == 'main' && $CI_PIPELINE_SOURCE != 'schedule'"

##
## Nightly pipelines
##

.only-nightly:
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'schedule'"

prepare-nightly:
  extends:
    - .only-nightly
  stage: build
  image: alpine
  script:
    # needed for get-release-sha
    - apk add --no-cache curl jq
    # sets DAVICAL_VERSION, DAVICAL_SHA512, AWL_VERSION, and AWL_SHA512 to the latest master commit of DAViCal and AWL
    - ./helpers/get-release-sha.sh master master
  artifacts:
    reports:
      dotenv: .versions.env

.after-nightly-prepared:
  extends:
    - .only-nightly
  needs:
    - job: prepare-nightly
      artifacts: true
  variables:
    DOCKER_BUILD_FLAGS: "--build-arg DAVICAL_VERSION --build-arg DAVICAL_SHA512 --build-arg AWL_VERSION --build-arg AWL_SHA512"
    BUILD_PREFIX:
      value: "$DAVICAL_VERSION-awl$AWL_VERSION"
      expand: true

build-nightly:
  extends:
    - .build-image
    - .after-nightly-prepared

release-nightly:
  extends:
    - .release-image
    - .after-nightly-prepared
  needs:
    - job: prepare-nightly
      artifacts: true
    - build-nightly